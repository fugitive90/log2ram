#!/bin/sh 
# kFreeBSD do not accept scripts as interpreters, using #!/bin/sh and sourcing.
#if [ true != "$INIT_D_SCRIPT_SOURCED" ] ; then
#    set "$0" "$@"; INIT_D_SCRIPT_SOURCED=true . /lib/init/init-d-script
#fi
### BEGIN INIT INFO
# Provides:          skeleton
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Example initscript
# Description:       This file should be used to construct scripts to be
#                    placed in /etc/init.d.  This example start a
#                    single forking daemon capable of writing a pid
#                    file.  To get other behavoirs, implemend
#                    do_start(), do_stop() or other functions to
#                    override the defaults in /lib/init/init-d-script.
### END INIT INFO

# Author: Foo Bar <foobar@baz.org>
#
# Please remove the "Author" lines above and replace them
# with your own name if you copy and modify this script.
PATH="/sbin:/bin/:/usr/bin/:/usr/local/bin"
DESC="Log2Ram is preventing constant disk I/O on embeded system, saving its lifetime. Modified for SysV system"

HDD_LOG=/var/log.hdd/
RAM_LOG=/var/log/
LOG2RAM_LOG="/var/log.hdd/log2ram"

[ $( id -u ) -ne 0 ] && echo "Must be run as root. Exiting." && exit 2

# Load LSB functions
. /lib/lsb/init-functions

# Load config 
[ -f "/etc/default/log2ram.conf" ] && CONFIG="/etc/default/log2ram.conf" && . $CONFIG || log_failure_msg "Config file not found"
[ -z $CONFIG ] && exit 2






is_safe () {
    [ -d "/var/log.hdd" ] || log_failure_msg "ERROR: /var/log.hdd doesn't exist!  Can't sync."
    [ -d "/var/log.hdd" ] || exit 1
}

sync_to_disk () {
    is_safe

    if [ "$USE_RSYNC" = true ]; then
        rsync -aXWv --delete --exclude log2ram.log --links "/var/log" "/var/log.hdd" 
    else
        cp -rfup "/var/log" -T "/var/log.hdd" 
    fi
}

sync_from_disk () {
    is_safe

    if [ ! -z `du -sh -t $SIZE "/var/log.hdd" | cut -f1` ]; then
        log_failure_msg "ERROR: RAM disk too small. Can't sync."
		  umount_log

		if [ "$MAIL" = true ]; then
			log_failure_msg "LOG2RAM : No place on RAM anymore, fallback on the disk"
			echo "LOG2RAM : No place on RAM anymore, fallback on the disk" | mail -s 'Log2Ram Error' root;
		fi
        exit 1
    fi

    if [ "$USE_RSYNC" = true ]; then
        rsync -aXWv --delete --exclude log2ram.log --links "/var/log.hdd" "/var/log" > "${LOG2RAM_LOG}.log" 2> "${LOG2RAM_LOG}.err"
    else
        cp -rfup "/var/log.hdd" -T "/var/log" > "${LOG2RAM_LOG}.log" 2> "${LOG2RAM_LOG}.err" 
    fi
}

check_is_mounted ()
{

   if	cat /proc/mounts | grep -q "log2ram" ; then
	  	return 2 	#log2ram mounted
	else
		return 0		#log2ram not-mounted
	fi

}

umount_log ()
{
	local _rc_log=""
	local _rc_log_hdd=""
	check_is_mounted
	if [ $? -eq 2 ];then
		umount -lv "/var/log" && _rc_log=0
		umount -lv "/var/log.hdd" && _rc_log_hdd=0
		[ -n $_rc_log -a -n $_rc_log_hdd  ] && log_info_msg "log2ram umounted"
	else
		log_warning_msg "log2ram is not mounted"
	fi

}

do_start ()
{
	
   [ -d "/var/log.hdd" ] || mkdir "/var/log.hdd"
   test -f "${LOG2RAM_LOG}.log"  && rm "${LOG2RAM_LOG}.log"  
   
	check_is_mounted
	if [ $? -eq 0 -a ! -f "/var/log.hdd/log2ram.lock" ]; then
		mount --bind "/var/log" "/var/log.hdd"
   	mount --make-private "/var/log.hdd"
   	mount -t tmpfs -o nosuid,noexec,nodev,mode=0755,size=$SIZE log2ram "/var/log"
   	sync_from_disk
		touch /var/log.hdd/log2ram.lock # this will overwrite anyway
	else
		log_warning_msg "Log2Ram already mounted"
		exit 2
	fi	

}

do_stop ()
{
	check_is_mounted && test $? -eq 2 && sync_to_disk
	umount_log
}

do_reload ()
{
	check_is_mounted
	if [ $? -eq 2 ]; then
   	sync_to_disk
	   exit 0
	else
	  log_warning_msg "Log2Ram not mounted. Files not synced!"
	  exit 2 
	fi
  

}
case "$1" in
  start)
	   do_start
		;;
  stop)
		do_stop
		;;
  reload)
		do_reload
		;;
	*)
			  
      echo "Usage: log2ram {start|stop|init|write}" >&2
      exit 1
      ;;
esac

exit 0
